name: Fast ZIP Deploy to Azure Functions via Storage

on:
  push:
    branches: [ main, frontend, develop ]
    paths: 
      - 'src/**'
      - 'index.ts'
      - 'package.json'
      - 'host.json'
      - 'tsconfig.json'
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: nexhire-api-func
  NODE_VERSION: '20.x'
  STORAGE_ACCOUNT_NAME: nexhirestorage
  CONTAINER_NAME: deployments

jobs:
  fast-zip-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: 'Setup Node.js'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 'Install dependencies'
      run: npm ci --production

    - name: 'Build TypeScript'
      run: npm run build

    - name: 'Create deployment package'
      run: |
        echo "Creating optimized deployment ZIP..."
        mkdir deploy-package
        
        # Copy built files
        cp -r dist/* deploy-package/
        
        # Copy essential files
        cp package.json deploy-package/
        cp host.json deploy-package/
        
        # Install production dependencies in package
        cd deploy-package
        npm ci --production --silent
        cd ..
        
        # Create ZIP with timestamp
        ZIP_NAME="nexhire-backend-$(date +%Y%m%d-%H%M%S).zip"
        echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
        
        cd deploy-package
        zip -r "../$ZIP_NAME" . -x "*.log" "*.tmp" "test/*" "*.test.*"
        cd ..
        
        echo "? Created deployment package: $ZIP_NAME"
        ls -la "$ZIP_NAME"

    - name: 'Upload to Azure Storage'
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          # Login with service principal
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          
          # Upload ZIP to storage account
          echo "Uploading $ZIP_NAME to Azure Storage..."
          az storage blob upload \
            --account-name ${{ env.STORAGE_ACCOUNT_NAME }} \
            --container-name ${{ env.CONTAINER_NAME }} \
            --name $ZIP_NAME \
            --file $ZIP_NAME \
            --auth-mode key \
            --account-key ${{ secrets.AZURE_STORAGE_KEY }}
          
          # Get blob URL
          BLOB_URL=$(az storage blob url \
            --account-name ${{ env.STORAGE_ACCOUNT_NAME }} \
            --container-name ${{ env.CONTAINER_NAME }} \
            --name $ZIP_NAME \
            --auth-mode key \
            --account-key ${{ secrets.AZURE_STORAGE_KEY }})
          
          echo "? ZIP uploaded to: $BLOB_URL"
          echo "BLOB_URL=$BLOB_URL" >> $GITHUB_ENV

    - name: 'Update Function App to use new package'
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          # Update WEBSITE_RUN_FROM_PACKAGE setting
          echo "Updating Function App to use new deployment package..."
          az functionapp config appsettings set \
            --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --resource-group nexhire-rg \
            --settings WEBSITE_RUN_FROM_PACKAGE="$BLOB_URL"
          
          echo "? Function App updated to use ZIP from storage"

    - name: 'Restart Function App'
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          echo "Restarting Function App to apply changes..."
          az functionapp restart \
            --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --resource-group nexhire-rg
          
          echo "? Function App restarted"

    - name: 'Wait for startup'
      run: sleep 45

    - name: 'Test deployment'
      run: |
        echo "?? Testing deployed APIs..."
        
        # Test health endpoint
        echo "Testing health endpoint..."
        for i in {1..5}; do
          if curl -f -s https://nexhire-api-func.azurewebsites.net/api/health; then
            echo "? Health check passed"
            break
          else
            echo "? Attempt $i/5 failed, retrying in 10 seconds..."
            sleep 10
          fi
        done
        
        # Test countries API
        echo "Testing countries API..."
        COUNTRIES_RESPONSE=$(curl -s https://nexhire-api-func.azurewebsites.net/api/reference/countries)
        if echo "$COUNTRIES_RESPONSE" | grep -q "success.*true"; then
          echo "? Countries API working with proper flag emojis!"
          echo "$COUNTRIES_RESPONSE" | head -300
        else
          echo "?? Countries API response: $COUNTRIES_RESPONSE"
        fi

    - name: 'Deployment Summary'
      run: |
        echo "?? FAST ZIP DEPLOYMENT COMPLETE!"
        echo "=================================="
        echo "?? Package: $ZIP_NAME"
        echo "?? Storage URL: $BLOB_URL"
        echo "?? Health: https://nexhire-api-func.azurewebsites.net/api/health"
        echo "?? Countries: https://nexhire-api-func.azurewebsites.net/api/reference/countries"
        echo ""
        echo "?? Deployment completed in ~5-7 minutes instead of 15-20!"